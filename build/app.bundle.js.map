{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./AirPollMain.js","webpack:///./ButtonEventHandler.js","webpack:///./DataVisualisationController.js","webpack:///./FirebaseCredentials.js","webpack:///./GridOverlay.js"],"names":["initApp","config","firebase","initializeApp","dataPointsDbRef","firestore","collection","map","initMap","addMapClickListener","getDataPointsFromDB","dataPoints","window","google","maps","Map","document","getElementById","center","lat","lng","zoom","styles","featureType","stylers","visibility","disableDoubleClickZoom","streetViewControl","addListener","mapLayer","dataPoint","latlng","latLng","toJSON","value","Math","floor","random","toString","date","Date","toUTCString","addNewDataPointClickToDb","add","then","docRef","console","log","id","catch","error","callback","get","docs","showDataGrid","showDataCircles","showDataPoints","showDensityHeatmap","showDataGridVal","showDataCirclesVal","showDataPointsVal","showDensityHeatmapVal","initButtonEventHandler","showDataGridM","showDataCirclesM","showDataPointsM","showDensityHeatmapM","addFormButtonListeners","showGridButton","showPointsButton","showCirclesButton","showHeatmapButton","innerText","onclick","styleButton","button","highlight","classList","remove","allDataPoints","dataPointMarkers","dataPointCircles","dataGrid","showDataPointMarkers","showDataCircleMarkers","showDataGridOverlay","heatmap","initDVController","mapObject","data","visualization","HeatmapLayer","radius","dissipating","initDataCirclesPointsAndHeatmap","forEach","addMarkerToMap","show","dataPointCircle","setVisible","dataPointMarker","setMap","getData","push","LatLng","hue","colorString","marker","Marker","position","label","visible","icon","path","SymbolPath","CIRCLE","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","scale","toDateString","toTimeString","split","drawCircle","opacity","Circle","firebaseCredentials","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initGridOverlay","hideDataGrid","rectangle","displayGrid","bounds","getBounds","projection","getProjection","ne","fromLatLngToPoint","getNorthEast","sw","getSouthWest","pow","getZoom","widthPixels","x","heightPixels","y","totalSquareLengthPixels","min","gridLengthPixels","round","xOffsetOffScreen","yOffsetOffScreen","gridsAmountX","gridsAmountY","gridsXPixels","xPixels","maxX","gridsYPixels","yPixels","maxY","gridDataCollection","gridX","gridY","pixelPoint","pixelX","pixelY","maxGridValue","minGridValue","sumOfGridValues","totalGridValues","gridIndexToLatLngBounds","length","gridBounds","pointToLatLng","values","count","total","index","parseInt","avg","toFixed","parseFloat","gridBlendedDataCollection","blendGrid","drawRectangle","xIndex","yIndex","val","dontShowGrid","blendOperation","gridValues","isNaN","startX","startY","gridLength","nePoint","Point","fromPointToLatLng","swPoint","LatLngBounds","Rectangle"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./AirPollMain.js\");\n","import { firebaseCredentials } from './FirebaseCredentials';\nimport { initDVController } from './DataVisualisationController';\n\nfunction initApp() {\n  const config = firebaseCredentials(); //Firebase API keys\n  firebase.initializeApp(config);\n  const dataPointsDbRef = firebase.firestore().collection('datapoints');\n\n  const map = initMap();\n\n  addMapClickListener(map, dataPointsDbRef);\n\n  getDataPointsFromDB(dataPointsDbRef, function(dataPoints) {\n    initDVController(map, dataPoints);\n  });\n}\n\nwindow.initApp = initApp;\n\nfunction initMap() {\n  return new google.maps.Map(document.getElementById('map'), {\n    center: {lat: 50.9365, lng: -1.396},\n    zoom: 16,\n    //hide points of interest and public transport\n    styles: [{\n      featureType: 'poi',\n      stylers: [{visibility: 'off'}],\n    }, {\n      featureType: 'transit.station',\n      stylers: [{visibility: 'off'}],\n    }],\n    disableDoubleClickZoom: true,\n    streetViewControl: false,\n  });\n}\n\nfunction addMapClickListener(map, dataPointsDbRef) {\n  map.addListener('click', function (mapLayer) {\n\n    const dataPoint = {\n      latlng: mapLayer.latLng.toJSON(),\n      value: Math.floor((Math.random() * 100)).toString(),\n      date: new Date().toUTCString(),\n    };\n\n    addNewDataPointClickToDb(dataPointsDbRef, dataPoint);\n  });\n}\n\nfunction addNewDataPointClickToDb(dataPointsDbRef, dataPoint) {\n  dataPointsDbRef.add(dataPoint).then(function (docRef) {\n    console.log('Document written with ID: ', docRef.id);\n  }).catch(function (error) {\n    console.error('Error adding document: ', error);\n  });\n}\n\nfunction getDataPointsFromDB(dataPointsDbRef, callback) {\n  dataPointsDbRef.get().then(function (dataPoints) {\n    callback(dataPoints.docs);\n  });\n}\n\n//TODO: get datapoints as they are added to database\n","let showDataGrid;\nlet showDataCircles;\nlet showDataPoints;\nlet showDensityHeatmap;\n\nlet showDataGridVal;\nlet showDataCirclesVal;\nlet showDataPointsVal;\nlet showDensityHeatmapVal;\n\nfunction initButtonEventHandler(showDataGridM, showDataCirclesM, showDataPointsM, showDensityHeatmapM) {\n  showDataGrid = showDataGridM;\n  showDataCircles = showDataCirclesM;\n  showDataPoints = showDataPointsM;\n  showDensityHeatmap = showDensityHeatmapM;\n\n  addFormButtonListeners();\n}\n\nfunction addFormButtonListeners() {\n\n  const showGridButton = document.getElementById('showGrid');\n  const showPointsButton = document.getElementById('showPoints');\n  const showCirclesButton = document.getElementById('showCircles');\n  const showHeatmapButton = document.getElementById('showHeatmap');\n\n  showDataGridVal = !(showGridButton.innerText === 'Show Data Grid');\n  showDataPointsVal = !(showPointsButton.innerText === 'Show Data Points');\n  showDataCirclesVal = !(showCirclesButton.innerText === 'Show Data Circles');\n  showDensityHeatmapVal = !(showHeatmapButton.innerText === 'Show Heatmap');\n\n  showGridButton.onclick = function () {\n    styleButton(showGridButton, !showDataGridVal);\n    showGridButton.innerText = showDataGridVal ? 'Show Data Grid' : 'Hide Data Grid';\n    showDataGridVal =! showDataGridVal;\n    showDataGrid(showDataGridVal);\n  };\n\n  showPointsButton.onclick = function () {\n    styleButton(showPointsButton, !showDataPointsVal);\n    showPointsButton.innerText = showDataPointsVal ? 'Show Data Points' : 'Hide Data Points';\n    showDataPointsVal =! showDataPointsVal;\n    showDataPoints(showDataPointsVal);\n  };\n\n  showCirclesButton.onclick = function () {\n    styleButton(showCirclesButton, !showDataCirclesVal);\n    showCirclesButton.innerText = showDataCirclesVal ? 'Show Data Circles' : 'Hide Data Circles';\n    showDataCirclesVal =! showDataCirclesVal;\n    showDataCircles(showDataCirclesVal);\n  };\n\n  showHeatmapButton.onclick = function () {\n    styleButton(showHeatmapButton, !showDensityHeatmapVal);\n    showHeatmapButton.innerText = showDensityHeatmapVal ? 'Show Density Heatmap' : 'Hide Density Heatmap';\n    showDensityHeatmapVal =! showDensityHeatmapVal;\n    showDensityHeatmap(showDensityHeatmapVal);\n  };\n}\n\nfunction styleButton(button, highlight) {\n  if (highlight) {\n    button.classList.remove('btn-outline-primary');\n    button.classList.add('btn-primary');\n  } else {\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-outline-primary');\n  }\n}\n\nexport {\n  initButtonEventHandler,\n};","import { initButtonEventHandler } from './ButtonEventHandler';\nimport { displayGrid, hideDataGrid, initGridOverlay } from './GridOverlay';\n\nlet map;\nlet dataPoints;\n\nlet allDataPoints = [];\nlet dataPointMarkers = [];\nlet dataPointCircles = [];\nlet dataGrid = [];\n\nlet showDataPointMarkers = true;\nlet showDataCircleMarkers = false;\nlet showDataGridOverlay = false;\nlet heatmap;\n\nfunction initDVController(mapObject, dataPoints) {\n  allDataPoints = dataPoints.map(dataPoint => dataPoint.data());\n  map = mapObject;\n  heatmap = new google.maps.visualization.HeatmapLayer({radius: 0.005, dissipating: false});\n\n  initButtonEventHandler(showDataGrid, showDataCircles, showDataPoints, showDensityHeatmap);\n  initDataCirclesPointsAndHeatmap();\n  initGridOverlay(map, allDataPoints);\n}\n\nfunction initDataCirclesPointsAndHeatmap() {\n  allDataPoints.forEach(function(dataPoint) {\n    addMarkerToMap(dataPoint);\n  });\n}\n\nfunction showDataGrid(show) {\n  if (show) {\n    displayGrid();\n  } else {\n    hideDataGrid();\n  }\n}\n\nfunction showDataCircles(show) {\n  dataPointCircles.forEach(function (dataPointCircle) {\n    dataPointCircle.setVisible(show);\n  });\n}\n\nfunction showDataPoints(show) {\n  showDataPoints = show;\n  dataPointMarkers.forEach(function (dataPointMarker) {\n    dataPointMarker.setVisible(show);\n    // dataPointMarker.setMap(show ? map : null);\n  });\n}\n\nfunction showDensityHeatmap(show) {\n  heatmap.setMap(show ? map : null);\n}\n\nfunction addMarkerToMap(dataPoint) {\n  // todo split up\n  const latlng = dataPoint.latlng;\n  heatmap.getData().push(new google.maps.LatLng(latlng.lat, latlng.lng));\n  const hue = (100 - dataPoint.value) * 0.6;\n  const colorString = 'hsl(' + hue + ', 100%, 50%)';\n  const marker = new google.maps.Marker({\n    position: latlng,\n    label: dataPoint.value.toString(),\n    map: map,\n    visible: showDataPointMarkers,\n    icon: {\n      path: google.maps.SymbolPath.CIRCLE,\n      strokeColor: colorString,\n      strokeOpacity: 0,\n      strokeWeight: 1,\n      fillColor: colorString,\n      fillOpacity: 0,\n      scale: 10,\n    },\n  });\n\n  dataPointMarkers.push(marker);\n\n  marker.addListener('click', function () {\n    const date = new Date(dataPoint.date);\n    document.getElementById('date').value = date.toDateString();\n    document.getElementById('time').value = date.toTimeString().split(' ')[0];\n    document.getElementById('value').value = dataPoint.value;\n  });\n\n  // drawCircle(latlng, map, colorString, 0.5, 50);\n  // drawCircle(latlng, map, colorString, 0.3, 100);\n  drawCircle(latlng, map, colorString, 0.1, 200);\n}\n\nfunction drawCircle(latlng, map, colorString, opacity, radius) {\n  dataPointCircles.push(\n    new google.maps.Circle({\n      strokeOpacity: 0,\n      fillColor: colorString,\n      fillOpacity: opacity,\n      map: map,\n      center: latlng,\n      radius: radius,\n      visible: showDataCircleMarkers,\n    }),\n  );\n}\n\nexport {\n  initDVController,\n  addMarkerToMap,\n}","export function firebaseCredentials() {\n  return {\n    apiKey: \"AIzaSyCTY-5_e4vfG_hURD10OVQ-wOkkiBQpZlI\",\n    authDomain: \"airpoll-830fa.firebaseapp.com\",\n    databaseURL: \"https://airpoll-830fa.firebaseio.com\",\n    projectId: \"airpoll-830fa\",\n    storageBucket: \"airpoll-830fa.appspot.com\",\n    messagingSenderId: \"512203516382\"\n  };\n}","\nlet map;\nlet allDataPoints;\nlet dataGrid = [];\n\nfunction initGridOverlay(mapObject, dataPoints) {\n  map = mapObject;\n  allDataPoints = dataPoints;\n}\n\nfunction hideDataGrid() {\n  dataGrid.forEach(function (rectangle) {\n    rectangle.setVisible(false);\n  });\n}\n\nfunction displayGrid() {\n\n  //Step1: find biggest square (in pixels) on map\n  let bounds = map.getBounds();\n  let projection = map.getProjection();\n\n  let ne = projection.fromLatLngToPoint(bounds.getNorthEast());\n  let sw = projection.fromLatLngToPoint(bounds.getSouthWest());\n\n  let scale = Math.pow(2, map.getZoom());\n\n  let widthPixels = (ne.x - sw.x) * scale;\n  let heightPixels = (sw.y - ne.y) * scale;\n\n  let totalSquareLengthPixels = Math.min(widthPixels, heightPixels);\n\n  //Step 2: find grid size in pixels\n  let gridLengthPixels = Math.round(totalSquareLengthPixels / 20); //Eventually changeable by slider\n\n\n  //Step 3: Create grid data structure\n  let xOffsetOffScreen = gridLengthPixels + (0.5 * (widthPixels % gridLengthPixels));\n  let yOffsetOffScreen = gridLengthPixels + (0.5 * (heightPixels % gridLengthPixels));\n\n  let gridsAmountX = 3 + Math.round(widthPixels / gridLengthPixels);\n  let gridsAmountY = 3 + Math.round(heightPixels / gridLengthPixels); //todo recalculate\n\n\n  //Using Pixels for grids because converting each grid coordinate to latlng and comparing each data point to a\n  //list of lats and lngs takes much longer than finding pixel coordinate of datapoint! (then grid is easy to find)\n\n  let gridsXPixels = [];\n  let xPixels;\n  for (xPixels = -xOffsetOffScreen; xPixels < widthPixels + gridLengthPixels; xPixels += gridLengthPixels) {\n    gridsXPixels.push(Math.round(xPixels));\n  }\n  let maxX = xPixels + gridLengthPixels;\n\n  let gridsYPixels = [];\n  let yPixels;\n  for (yPixels = -yOffsetOffScreen; yPixels < heightPixels + gridLengthPixels; yPixels += gridLengthPixels) {\n    gridsYPixels.push(Math.round(yPixels));\n  }\n  let maxY = yPixels + gridLengthPixels;\n\n  //3D array! [X Position][Y Position][List of data in grid]\n  let gridDataCollection = [];\n  for (let gridX = 0; gridX < gridsAmountX + 1; gridX++) {\n    gridDataCollection[gridX] = [];\n    for (let gridY = 0; gridY < gridsAmountY + 1; gridY++) {\n      gridDataCollection[gridX][gridY] = [];\n    }\n  }\n\n  allDataPoints.forEach(function (dataPoint) {\n    let latlng = new google.maps.LatLng(dataPoint.latlng.lat, dataPoint.latlng.lng);\n    let pixelPoint = projection.fromLatLngToPoint(latlng);\n    let pixelX = Math.round((pixelPoint.x - sw.x) * scale);\n    let pixelY = Math.round((pixelPoint.y - ne.y) * scale);\n\n    if (pixelX >= -xOffsetOffScreen && pixelX < maxX\n      && pixelY >= -yOffsetOffScreen && pixelY < maxY) {\n      let gridX = ((pixelX + xOffsetOffScreen) / gridLengthPixels);\n      let gridY = ((pixelY + yOffsetOffScreen) / gridLengthPixels);\n      gridDataCollection[(Math.floor(gridX))][Math.floor(gridY)].push(dataPoint.value);\n    }\n  });\n\n  let maxGridValue = 0;\n  let minGridValue = 100;\n  let sumOfGridValues = 0;\n  let totalGridValues = 0; //number of non-empty grids to calculate average grid value\n\n\n  let gridIndexToLatLngBounds = [];\n\n  for (let gridX = 0; gridX < gridsXPixels.length + 1; gridX++) {\n    gridIndexToLatLngBounds[gridX] = [];\n    for (let gridY = 0; gridY < gridsYPixels.length + 1; gridY++) {\n      let gridBounds = pointToLatLng(projection, gridsXPixels[gridX], gridsYPixels[gridY], sw.x, ne.y, scale, gridLengthPixels);\n      gridIndexToLatLngBounds[gridX][gridY] = gridBounds;\n\n      let values = gridDataCollection[gridX][gridY];\n\n      let count = values.length;\n      if (count === 0) {\n        gridDataCollection[gridX][gridY] = null;\n      } else {\n        let total = 0;\n        for (let index = 0; index < count; index++) {\n          total += parseInt(gridDataCollection[gridX][gridY][index]);\n        }\n        let avg = (total / count).toFixed(2);\n        gridDataCollection[gridX][gridY] = avg;\n\n        if (avg > maxGridValue) {\n          maxGridValue = avg;\n        }\n        if (avg < minGridValue) {\n          maxGridValue = avg;\n        }\n        sumOfGridValues += parseFloat(avg);\n        totalGridValues++;\n      }\n    }\n  }\n\n  // console.log(gridDataCollection);\n\n  /*for (gridX=0; gridX< gridsXPixels.length + 1; gridX++) {\n    for (gridY=0; gridY< gridsYPixels.length + 1; gridY++) {\n      drawRectangle(map, gridIndexToLatLngBounds[gridX][gridY], gridDataCollection[gridX][gridY]);\n    }\n  }*/\n\n  let gridBlendedDataCollection = blendGrid(gridDataCollection);\n\n  // console.log(gridBlendedDataCollection);\n  for (let gridX = 0; gridX < gridsXPixels.length - 1; gridX++) {\n    for (let gridY = 0; gridY < gridsYPixels.length - 1; gridY++) {\n      drawRectangle(map, gridIndexToLatLngBounds[gridX + 1][gridY + 1], gridBlendedDataCollection[gridX][gridY]);\n    }\n  }\n}\n\nfunction blendGrid(gridDataCollection) {\n  let gridBlendedDataCollection = [];\n  for (let gridX = 1; gridX < gridDataCollection.length - 1; gridX++) {\n    gridBlendedDataCollection[gridX - 1] = [];\n    for (let gridY = 1; gridY < gridDataCollection[gridX].length - 1; gridY++) {\n      let total = 0; // total values for grid of 3 x 3\n      let count = 0;\n\n\n      for (let xIndex = gridX - 1; xIndex <= gridX + 1; xIndex++) {\n        for (let yIndex = gridY - 1; yIndex <= gridY + 1; yIndex++) {\n          let val = gridDataCollection[xIndex][yIndex];\n          if (val != null) {\n            count += parseInt(1);\n            total += parseFloat(val);\n          }\n        }\n      }\n\n      let dontShowGrid = ((count < 3) && (gridDataCollection[gridX][gridY] == null));\n      if (dontShowGrid) {\n        gridBlendedDataCollection[gridX - 1][gridY - 1] = null;\n      } else {\n        let avg = total / count;\n        gridBlendedDataCollection[gridX - 1][gridY - 1] = avg;\n      }\n    }\n  }\n\n  return gridBlendedDataCollection;\n}\n\nfunction blendOperation(gridValues, x, y, count, total) {\n  let val = gridValues[x][y];\n  if (!isNaN(val)) {\n    count += parseInt(1);\n    total += parseInt(val);\n  }\n}\n\nfunction pointToLatLng(projection, x, y, startX, startY, scale, gridLength) {\n  let nePoint = new google.maps.Point((x / scale) + startX, (y / scale) + startY);\n  let ne = projection.fromPointToLatLng(nePoint);\n  let swPoint = new google.maps.Point(((x + gridLength) / scale) + startX, ((y + gridLength) / scale) + startY);\n  let sw = projection.fromPointToLatLng(swPoint);\n\n  let bounds = new google.maps.LatLngBounds(ne, sw);\n  return bounds;\n}\n\nfunction drawRectangle(map, bounds, value) {\n  if (value != null) {\n    let hue = (100 - value) * 0.6;\n    let colorString = 'hsl(' + hue + ', 100%, 50%)';\n    dataGrid.push(new google.maps.Rectangle({\n      strokeWeight: 0,\n      fillColor: colorString,\n      fillOpacity: 0.7,\n      map: map,\n      bounds: bounds,\n    }));\n  }\n}\n\n\nexport {\n  initGridOverlay,\n  hideDataGrid,\n  displayGrid,\n}"],"sourceRoot":""}